#include <stdio.h>

#define TAM_MAX 100 // Tamanho máximo do array

typedef struct Produto {
  int id;
  char nome[50];
  float unitario;
  int qtde;
  float totalItem;
} Produto;

int main() {
  int nItens, i, j, codigoInserido;
  float totalGeral = 0;

  // 1. Solicitar o número de itens
  printf("Digite o número de itens: ");
  scanf("%d", &nItens);

  // Verificar se o número de itens é válido
  if (nItens <= 0 || nItens > TAM_MAX) {
    printf("Número de itens inválido! Deve ser entre 1 e %d.\n", TAM_MAX);
    return 1;
  }

  // 2. Criar e inicializar o array de produtos
  Produto produtos[TAM_MAX];
  for (i = 0; i < nItens; i++) {
    produtos[i].totalItem = 0;
  }

  // 3. Cadastrar os itens
  for (i = 0; i < nItens; i++) {
    printf("\nCadastro do item %d:\n", i + 1);

    // Inserir ID
    do {
      printf("ID: ");
      scanf("%d", &codigoInserido);

      // Verificar se o ID já existe
      for (j = 0; j < i; j++) {
        if (produtos[j].id == codigoInserido) {
          printf("ID já cadastrado! Tente outro.\n");
          break;
        }
      }
    } while (j < i && codigoInserido == produtos[i].id); // Verifica se o código inserido já existe e se é igual ao código do item atual

    produtos[i].id = codigoInserido; // Atribui o código inserido ao item atual

    // Inserir nome
    printf("Nome: ");
    scanf("%s", produtos[i].nome);

    // Inserir valor unitário
    printf("Valor Unitário: ");
    scanf("%f", &produtos[i].unitario);

    // Inserir quantidade
    printf("Quantidade: ");
    scanf("%d", &produtos[i].qtde);

    // Calcular total do item
    produtos[i].totalItem = produtos[i].unitario * produtos[i].qtde;
  }

  // 4. Imprimir lista de itens
  printf("\n\nLISTA DE ITENS\n");
  printf("CODIGO    NOME            QTDE  UNIT  TOTAL\n");
  for (i = 0; i < nItens; i++) {
    printf("%05d     %-20s        %3d     %5.2f   %5.2f\n",
           produtos[i].id, produtos[i].nome, produtos[i].qtde,
           produtos[i].unitario, produtos[i].totalItem);
    totalGeral += produtos[i].totalItem;
  }

  // 5. Calcular e imprimir total geral
  printf("\n                                           TOTAL FINAL   %5.2f\n", totalGeral);

  return 0;
}
